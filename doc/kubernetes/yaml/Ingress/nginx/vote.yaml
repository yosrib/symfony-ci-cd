apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db-postgres
  name: db-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-postgres
  template:
    metadata:
      labels:
        app: db-postgres
    spec:
      containers:
        - image: postgres:13.2-alpine
          name: postgres
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      volumes:
        - name: db-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db
spec:
  type: ClusterIP
  ports:
    - name: "db-service"
      port: 5432
      targetPort: 5432
  selector:
    app: db

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis:6.2-alpine3.13
          name: redis
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - mountPath: /data
              name: redis-data
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
spec:
  type: ClusterIP
  ports:
    - name: "redis-service"
      port: 6379
      targetPort: 6379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: result
  name: result
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
        - image: registry.gitlab.com/voting-application/result:v2
          name: result
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: result
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: result
  name: result
spec:
  type: NodePort
  ports:
    - name: "result-service"
      port: 80
      targetPort: 80
      nodePort: 31004
  selector:
    app: result
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: result-ui
  name: result-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-ui
  template:
    metadata:
      labels:
        app: result-ui
    spec:
      containers:
        - image: registry.gitlab.com/voting-application/result-ui
          name: result-ui
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: result-ui
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: result-ui
  name: result-ui
spec:
  type: NodePort
  ports:
    - name: "result-ui-service"
      port: 5001
      targetPort: 80
      nodePort: 31001
  selector:
    app: result-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vote
  name: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
        - image: registry.gitlab.com/voting-application/vote:v2
          name: vote
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: vote
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vote
  name: vote
spec:
  type: NodePort
  ports:
    - name: "vote-service"
      port: 80
      targetPort: 80
      nodePort: 31002
  selector:
    app: vote
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vote-ui
  name: vote-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-ui
  template:
    metadata:
      labels:
        app: vote-ui
    spec:
      containers:
        - image: registry.gitlab.com/voting-application/vote-ui
          name: vote-ui
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: vote-ui
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vote-ui
  name: vote-ui
spec:
  type: NodePort
  ports:
    - name: "vote-ui-service"
      port: 5000
      targetPort: 80
      nodePort: 31003
  selector:
    app: vote-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - image: registry.gitlab.com/voting-application/worker:go
          name: worker
          imagePullPolicy: Always
---